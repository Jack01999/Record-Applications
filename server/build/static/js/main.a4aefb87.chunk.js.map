{"version":3,"sources":["services/apps.js","components/Notification.js","components/AddAppPage.js","components/Note.js","components/URL.js","components/Status.js","components/ViewAppPage.js","components/MyNavbar.js","components/HomePage.js","components/Account.js","services/login.js","components/Login.js","components/Signup.js","components/Calendar.js","components/Statistics.js","App.js","index.js"],"names":["baseURL","token","axios","get","then","response","data","newObject","config","headers","Authorization","post","id","delete","put","newToken","Notification","message","Alert","variant","Heading","AddAppPage","companies","setCompanies","user","setUser","useState","setMessage","newName","setNewName","newURL","setNewURL","newLocation","setNewLocation","startPeriod","setStartPeriod","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","AppService","Jumbotron","Form","Group","Label","Control","value","onChange","event","target","InputGroup","className","Prepend","Text","FormControl","aria-describedby","placeholder","Button","onClick","size","block","currentDate","Date","preventDefault","AppObject","name","trim","location","url","date","Intl","DateTimeFormat","year","month","day","format","period","status","note","username","concat","setTimeout","Note","company","modal","setModal","setNote","handleCloseModal","handleShowModal","Modal","show","onHide","centered","Header","closeButton","Title","Body","as","rows","defaultValue","Footer","companyObject","map","currCompany","handleSaveNotes","URL","href","Status","handleStatusChange","newStatus","Dropdown","Toggle","Menu","Item","ViewAppPage","filterCompanies","setFilterCompanies","table","filter","toLowerCase","includes","color","handleDeleteChange","initApp","confirm","delCompany","type","aria-label","Table","striped","bordered","hover","responsive","width","MyNavbar","logout","clear","Navbar","bg","expand","Brand","Collapse","Nav","Link","NavDropdown","title","Divider","useStyles","makeStyles","theme","jumbo","minHeight","HomePage","classes","to","Account","login","credentials","a","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","Login","setUsername","password","setPassword","errorMessage","setErrorMessage","handleLogin","LoginService","setItem","stringify","console","log","Container","component","maxWidth","CssBaseline","Avatar","Typography","action","noValidate","onSubmit","TextField","required","fullWidth","label","autoFocus","autoComplete","FormControlLabel","control","Checkbox","Grid","container","item","xs","Signup","newUsername","setNewUsername","newPassword","setNewPassword","exception","justify","STYLE1","test","height","Calender","src","style","Statistics","App","exact","path","render","key","Calendar","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a4aefb87.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseURL = '/api/companies';\r\n\r\nconst userURL = '/api/users';\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getApp = () => {\r\n    const request = axios.get(baseURL);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst createApp = (newObject) => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n      }\r\n\r\n    const request = axios.post(baseURL, newObject, config);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst deleteApp = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst updateApp = (id, newObject) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst getUser = () => {\r\n    const request = axios.get(userURL);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst createUser = (newObject) => {\r\n    const request = axios.post(userURL, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default { getApp, createApp, deleteApp, updateApp, setToken, getUser, createUser };","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === '') {\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            <Alert variant=\"success\">\r\n                <Alert.Heading>{message}</Alert.Heading>\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\r\nimport AppService from '../services/apps'\r\nimport Notification from './Notification'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst AddAppPage = ({ companies, setCompanies, user, setUser }) => {\r\n    const [message, setMessage] = useState(null);\r\n    const [newName, setNewName] = useState('');\r\n    const [newURL, setNewURL] = useState('');\r\n    const [newLocation, setNewLocation] = useState('');\r\n    const [startPeriod, setStartPeriod] = useState('');\r\n    \r\n    useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedCompanyappUser')\r\n    if (loggedUserJSON) {\r\n        const user = JSON.parse(loggedUserJSON)\r\n        setUser(user)\r\n        AppService.setToken(user.token)\r\n    }\r\n    }, [])\r\n\r\n    const addApp = (event) => {\r\n        if (newName === ('')) {\r\n            return null;\r\n        }\r\n\r\n        let currentDate = new Date();\r\n        event.preventDefault();\r\n\r\n        const AppObject = {\r\n          name: newName.trim(),\r\n          location: newLocation.trim(),\r\n          url: newURL.trim(),\r\n          date: new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit'}).format(currentDate),\r\n          period: startPeriod.trim(),\r\n          status: \"In Review\",\r\n          note: \"\",\r\n          user: user.username\r\n\r\n        }\r\n        if (AppObject.period === '') {\r\n            AppObject.period = 'Summer 2021';\r\n        }\r\n\r\n        if (newURL !== '') {\r\n            AppObject.url = 'http://' + newURL;\r\n        }\r\n\r\n        AppService\r\n          .createApp(AppObject)\r\n          .then(data => { \r\n            setCompanies(companies.concat(data));\r\n            setNewName('');\r\n            setNewURL('');\r\n            setStartPeriod('');\r\n            setNewLocation('');\r\n        })\r\n        setMessage(`Added ${newName}`)\r\n        setTimeout(() => {\r\n        setMessage(null)\r\n        }, 5000)\r\n        \r\n    }\r\n\r\n    const resetForm = () => {\r\n        setNewName('')\r\n        setNewURL('');\r\n        setStartPeriod('');\r\n        setNewLocation('');\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    const handleURLChange = (event) => {\r\n        setNewURL(event.target.value);\r\n    }\r\n\r\n    const handleLocationChange = (event) => {\r\n        setNewLocation(event.target.value);\r\n    }\r\n\r\n    const handlePeriodChange = (event) => {\r\n        setStartPeriod(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Jumbotron>\r\n            <div>\r\n                <h2>Add Applications</h2>\r\n                <br></br>\r\n                <Notification message={message} />\r\n                <Form.Group>\r\n                    <Form.Label><strong>Company Name</strong></Form.Label>\r\n                    <Form.Control value={newName} onChange={handleNameChange}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label><strong>Location</strong></Form.Label>\r\n                    <Form.Control value={newLocation} onChange={handleLocationChange}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label><strong>Application URL</strong></Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                        <strong>http://</strong>\r\n                    </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl value={newURL} onChange={handleURLChange} aria-describedby=\"basic-addon3\" />\r\n                </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label><strong>Start Period</strong></Form.Label>\r\n                    <Form.Control value={startPeriod} onChange={handlePeriodChange} placeholder=\"Summer 2020\">\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br></br>\r\n            </div>\r\n            <div>\r\n                <Button onClick={resetForm} variant=\"outline-danger\" size=\"lg\" block>Reset</Button>\r\n            </div>\r\n            <br></br>\r\n            <div>\r\n                <Button onClick={addApp} variant=\"outline-success\" size=\"lg\" block>Submit</Button>\r\n            </div>\r\n        </Jumbotron>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddAppPage;","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport AppService from '../services/apps'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\n\r\nconst Note = ({ company, companies, setCompanies }) => {\r\n    const [modal, setModal] = useState(false);\r\n    const [note, setNote] = useState(\"\");\r\n\r\n    const handleShowModal = (company) => {\r\n        setNote(company.note);\r\n        setModal(true);\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setModal(false);\r\n    }\r\n\r\n    const handleModalChange = (event) => {\r\n        setNote(event.target.value);\r\n    }\r\n\r\n    const handleSaveNotes = (company) => {\r\n        const companyObject = {\r\n            name: company.name.trim(),\r\n            location: company.location.trim(),\r\n            url: company.url.trim(),\r\n            date: company.date,\r\n            period: company.period.trim(),\r\n            status: company.status,\r\n            note: note,\r\n            user: company.user.username\r\n        }\r\n\r\n        AppService\r\n            .updateApp(company.id, companyObject)\r\n            .then(response => {\r\n                setCompanies(companies.map(currCompany => currCompany.id !== company.id ? currCompany : response))\r\n            })\r\n\r\n        setModal(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => handleShowModal(company)}>More</button>\r\n            <Modal show={modal} onHide={handleCloseModal} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Notes</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body><strong>Add Notes to {company.name}</strong><FormControl as=\"textarea\" rows=\"10\" defaultValue={note} onChange={handleModalChange}/></Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => handleSaveNotes(company)}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n    \r\n    \r\n}\r\n\r\nexport default Note;","import React from 'react'\r\n\r\nconst URL = ({ company }) => {\r\n    const emptyURL = () => (\r\n        <div>\r\n            <a href={company.url}> </a>\r\n        </div>\r\n    )\r\n\r\n    const nonEmptyURL = () => (\r\n        <div>\r\n            <a href={company.url}>{company.name}</a>\r\n        </div>\r\n    )\r\n    return (\r\n        <div>\r\n            {company.url === '' ?\r\n            emptyURL() :\r\n            nonEmptyURL()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default URL;","import React from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport AppService from '../services/apps'\r\n\r\nconst Status = ({ company, companies, setCompanies }) => {\r\n    \r\n    const handleStatusChange = (company, newStatus) => {\r\n        const companyObject = {\r\n            name: company.name.trim(),\r\n            location: company.location.trim(),\r\n            url: company.url.trim(),\r\n            date: company.date,\r\n            period: company.period.trim(),\r\n            status: newStatus,\r\n            note: company.note,\r\n            user: company.user.username\r\n        }\r\n\r\n        AppService\r\n            .updateApp(company.id, companyObject)\r\n            .then(response => {\r\n                setCompanies(companies.map(currCompany => currCompany.id !== company.id ? currCompany : response))\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"secondary\">\r\n                    {company.status}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item onClick={() => { handleStatusChange(company, \"In Review\") }}>In Review</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => { handleStatusChange(company, \"Coding Challenge\") }}>Coding Challenge</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => { handleStatusChange(company, \"Interview\") }}>Interview</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => { handleStatusChange(company, \"Rejected\") }}>Rejected</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status;","import React, { useState, useEffect } from 'react'\r\nimport AppService from '../services/apps'\r\nimport Table from 'react-bootstrap/Table'\r\nimport FaClose from 'react-icons/lib/fa/close'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Note from './Note'\r\nimport URL from './URL'\r\nimport Status from './Status'\r\n\r\nconst ViewAppPage = ({ companies, setCompanies, user, setUser }) => {\r\n    const [filterCompanies, setFilterCompanies] = useState('');\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedCompanyappUser')\r\n        if (loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            AppService.setToken(user.token)\r\n        }\r\n        }, [])\r\n\r\n    const filteredCompanies = companies.filter(company =>\r\n               (company.name.toLowerCase().includes(filterCompanies.toLowerCase()) \r\n            || company.period.toLowerCase().includes(filterCompanies.toLowerCase())\r\n            || company.location.toLowerCase().includes(filterCompanies.toLowerCase())\r\n            || company.status.toLowerCase().includes(filterCompanies.toLowerCase()))\r\n            && company.user.username == user.username\r\n            \r\n    );\r\n\r\n    const table = filteredCompanies.map(company => \r\n        <>\r\n            <tr>\r\n                <td><FaClose size={25} color=\"red\" onClick={() => { handleDeleteChange(company) }}>Delete</FaClose></td>\r\n                <td>{company.name}</td>\r\n                <td>{company.location}</td>\r\n                <td>{company.date}</td>\r\n                <td>{company.period}</td>\r\n                <td><URL company={company} /></td>\r\n                <td><Status company={company} companies={companies} setCompanies={setCompanies}/></td>\r\n                <td><Note company={company} companies={companies} setCompanies={setCompanies} /></td>\r\n            </tr>\r\n        </>\r\n    );\r\n\r\n    const hook = () => {\r\n        AppService\r\n          .getApp()\r\n          .then(initApp => {\r\n            setCompanies(initApp);\r\n        })\r\n    }\r\n    useEffect(hook, []);\r\n\r\n    const handleDeleteChange = (company) => {\r\n        if (window.confirm(`Are you sure you want to remove ${company.name}?`)) {\r\n            AppService\r\n                .deleteApp(company.id)\r\n                .then(response => {\r\n                    setCompanies(companies.filter(delCompany => delCompany.id !== company.id));\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleCompanyChange = (event) => {\r\n        setFilterCompanies(event.target.value);\r\n    }\r\n\r\n    const handleStatusChange = (company, newStatus) => {\r\n        const companyObject = {\r\n            name: company.name.trim(),\r\n            location: company.location.trim(),\r\n            url: company.url.trim(),\r\n            date: company.date,\r\n            period: company.period.trim(),\r\n            status: newStatus,\r\n            note: company.note,\r\n            user: company.user.username\r\n        }\r\n\r\n        AppService\r\n            .updateApp(company.id, companyObject)\r\n            .then(response => {\r\n                setCompanies(companies.map(currCompany => currCompany.id !== company.id ? currCompany : response))\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Jumbotron>\r\n            <div>\r\n                <InputGroup size=\"lg\" type=\"text\" value={filterCompanies} onChange={handleCompanyChange}> \r\n                    <InputGroup.Prepend>\r\n                    <InputGroup.Text ><strong>Filter</strong></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n                </InputGroup>\r\n                <Table striped bordered hover variant=\"dark\" size=\"sm\" responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th width=\"40\">Delete</th>\r\n                            <th width=\"460\">Company Name</th>\r\n                            <th width=\"150\">Location</th>\r\n                            <th width=\"150\">Applied Date</th>\r\n                            <th width=\"200\">Start Period</th>\r\n                            <th width=\"230\">Application URL</th>\r\n                            <th width=\"190\">Status</th>\r\n                            <th width=\"80\">More Info</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {table}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </Jumbotron>\r\n        \r\n    )\r\n}\r\n\r\nexport default ViewAppPage;","import React, { useEffect } from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport AppService from '../services/apps'\r\n\r\nconst MyNavbar = () => {\r\n    const logout = () => {\r\n        window.localStorage.clear();\r\n    }\r\n\r\n    const loggedInNavbar = () => (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">Record Applications</Navbar.Brand>\r\n            <Navbar.Collapse>\r\n            <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/add\">Add Apps</Nav.Link>\r\n            <Nav.Link href=\"/view\">View Apps</Nav.Link>\r\n            <Nav.Link href=\"/calendar\">Calendar</Nav.Link>\r\n            <Nav.Link href=\"/statistics\">Statistics</Nav.Link>\r\n            </Nav>            \r\n            <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/account\">Account</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/login\">Login</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/\" onClick={() => logout()}>Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n\r\n    const loggedOutNavbar = () => (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">Record Applications</Navbar.Brand>\r\n            <Navbar.Collapse>\r\n            <Nav className=\"mr-auto\">\r\n            </Nav>\r\n            <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/account\">Account</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/login\">Login</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/signup\">Signup</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/\" onClick={() => logout()}>Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n\r\n    const loggedIn = () => {\r\n        if (window.localStorage.getItem('loggedCompanyappUser') !== null) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loggedIn() === true ?\r\n                loggedInNavbar() :\r\n                loggedOutNavbar()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyNavbar;","import React from 'react'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route, Link, Redirect, withRouter\r\n  } from 'react-router-dom'\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    jumbo: {\r\n        minHeight: 848,\r\n    },\r\n  }));\r\n\r\nconst HomePage = () => {\r\n    const classes = useStyles();\r\n    \r\n    const loggedIn = () => {\r\n        if (window.localStorage.getItem('loggedCompanyappUser') !== null) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // const username = () => {\r\n    //     const username = window.localStorage.getItem('loggedCompanyappUser');\r\n        \r\n    //     alert(username);\r\n    // }\r\n\r\n    const loggedInHomePage = () => (\r\n        <div>\r\n            <h4>Welcome back User</h4>\r\n        </div>\r\n    )\r\n\r\n    const loggedOutHomePage = () => (\r\n        <div>\r\n            <h4>Welcome back guest</h4>\r\n            <p>Please <Link to=\"/login\">sign in</Link> to continue.</p>\r\n            <p>Please <Link to=\"/signup\">sign up</Link> if you do not have an account yet.</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Jumbotron className={classes.jumbo}>\r\n            <h1>Home Page</h1>\r\n            \r\n            {loggedIn() === true ?\r\n                loggedInHomePage() :\r\n                loggedOutHomePage()}\r\n            \r\n            <div>\r\n                <h2>What is App-Tracker?</h2>\r\n                <p>App-Tracker is a web app developed to help organize, update, and keep track of job applications all on the same site.</p>\r\n\r\n                <h2>What are the current features?</h2>\r\n                <ul>\r\n                    <l1>Add Applications</l1>\r\n                    <br></br>\r\n                    <l1>View Applications</l1>\r\n                    <br></br>\r\n                    <l1>Edit Applications (Status, side-notes)</l1>\r\n                </ul>\r\n\r\n                <h2>What are some upcoming features?</h2>\r\n                <ul>\r\n                    <l1>Sync with google calendars (e.g Interview dates)</l1>\r\n                    <br></br>\r\n                    <l1>Statistics of Applications Page</l1>\r\n                </ul>\r\n            </div>\r\n            \r\n\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nconst Account = () => {\r\n    return (\r\n        <Jumbotron>\r\n            <h2>Your Account</h2>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default Account;","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials);\r\n    return response.data;\r\n}\r\n\r\nexport default { login };","import React, { useState } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport LoginService from '../services/login'\r\nimport Notification from './Notification'\r\nimport AppService from '../services/apps'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nconst Login = ({ user, setUser }) => {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const user = await LoginService.login({ username, password });\r\n            \r\n            window.localStorage.setItem(\r\n                'loggedCompanyappUser', JSON.stringify(user)\r\n              ) \r\n            AppService.setToken(user.token);\r\n            setUser(user);\r\n            console.log(\"username: \" + user.username);\r\n            console.log(\"user name: \" + user.name);\r\n            console.log(\"user password: \" + user.password);\r\n            console.log(\"user id: \" + user.id);\r\n            setUsername('');\r\n            setPassword('');\r\n            window.location.href=\"/\"; \r\n        } catch (exception) {\r\n            setErrorMessage('Wrong credentials')\r\n            setTimeout(() => {\r\n                setErrorMessage('')\r\n            }, 3000)\r\n        }\r\n    }\r\n\r\n    const loginForm = () => (\r\n        <div className={classes.paper}>\r\n                <Notification message={errorMessage}/>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n                </Typography>\r\n                <form className={classes.form} action=\"/\" noValidate onSubmit={handleLogin}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    autoFocus\r\n                    onChange = {({ target }) => setUsername(target.value)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange = {({ target }) => setPassword(target.value)}\r\n                />\r\n                <FormControlLabel\r\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                    label=\"Remember me\"\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Sign In\r\n                </Button>\r\n                <Grid container>\r\n                    <Grid item xs>\r\n                    <Link href=\"#\" variant=\"body2\">\r\n                        Forgot password?\r\n                    </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <Link href=\"/signup\" variant=\"body2\">\r\n                        {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n            </div>\r\n    )\r\n\r\n    const loggedInForm = () => (\r\n        <div>\r\n            Go add/view your applications\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            {loginForm()}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react'\r\nimport AppService from '../services/apps'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Notification from './Notification'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nconst Signup = ({ user, setUser }) => {\r\n    const classes = useStyles();\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [newUsername, setNewUsername] = useState('');\r\n    const [newName, setNewName] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    //const [user, setUser] = useState(null);\r\n\r\n    const register = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const userObject = {\r\n            username: newUsername,\r\n            name: newName,\r\n            password: newPassword,\r\n        }\r\n\r\n        const user = AppService.createUser(userObject);\r\n        setUser(user);\r\n        console.log(`${user} has been registered`);\r\n        setNewUsername('');\r\n        setNewName('');\r\n        setNewPassword('');\r\n        window.location.href=\"/login\"; \r\n        } catch(exception) {\r\n            setMessage('Username taken')\r\n            setTimeout(() => {\r\n                setMessage('')\r\n            }, 3000)\r\n        }\r\n        \r\n            \r\n    }\r\n\r\n    const handleUsernameChange = (event) => {\r\n        setNewUsername(event.target.value);\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    const handlePasswordChange = (event) => {\r\n        setNewPassword(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <Notification message={message} />\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                Sign up\r\n                </Typography>\r\n                <form className={classes.form} action=\"/login\" noValidate>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        name=\"username\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        autoFocus\r\n                        onChange={handleUsernameChange}\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Full name\"\r\n                        name=\"name\"\r\n                        onChange={handleNameChange}\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        onChange={handlePasswordChange}\r\n                    />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={register}\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                    <Link href=\"/login\" variant=\"body2\">\r\n                        Already have an account? Sign in\r\n                    </Link>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React, { useState, useEffect } from 'react'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\n \r\nconst STYLE1 = {\r\n    test: {\r\n        width:\"100%\",\r\n        height:\"76vh\",\r\n    }\r\n}\r\n \r\nconst Calender = () => {\r\n \r\n \r\n    return (\r\n        <Jumbotron>\r\n            <div>\r\n                <iframe src=\"https://calendar.google.com/calendar/embed?height=700&amp;wkst=1&amp;bgcolor=%23039BE5&amp;ctz=America%2FNew_York&amp;src=amFja2MyODQ5QGdtYWlsLmNvbQ&amp;src=YWRkcmVzc2Jvb2sjY29udGFjdHNAZ3JvdXAudi5jYWxlbmRhci5nb29nbGUuY29t&amp;color=%2322AA99&amp;color=%23336699&amp;showPrint=0&amp;showDate=1&amp;showNav=1&amp;showCalendars=0&amp;showTabs=0&amp;showTitle=0\" style={STYLE1.test}></iframe>\r\n                \r\n            </div>\r\n        </Jumbotron>\r\n    )\r\n}\r\n \r\nexport default Calender;","import React, { useState, useEffect } from 'react'\r\nimport AppService from '../services/apps'\r\n\r\nconst Statistics = ({ companies, setCompanies, user, setUser }) => {\r\n    const [filterCompanies, setFilterCompanies] = useState('');\r\n    const inReview = 0;\r\n    const inInterview = 0;\r\n    const inCodingChallenge = 0;\r\n    const inDeclined = 0;\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedCompanyappUser')\r\n        if (loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            AppService.setToken(user.token)\r\n        }\r\n        }, [])\r\n\r\n    // const filteredCompanies = companies.filter(company =>\r\n    //     (company.name.toLowerCase().includes(filterCompanies.toLowerCase()) \r\n    //  || company.period.toLowerCase().includes(filterCompanies.toLowerCase())\r\n    //  || company.location.toLowerCase().includes(filterCompanies.toLowerCase())\r\n    //  || company.status.toLowerCase().includes(filterCompanies.toLowerCase()))\r\n    //  && company.user.username == user.username\r\n    // );\r\n\r\n    \r\n\r\n    const test = () => {\r\n        console.log(filterCompanies);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>This is the Statistics page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistics;","import React, { useState, useEffect } from 'react'\r\nimport AddAppPage from './components/AddAppPage'\r\nimport ViewAppPage from './components/ViewAppPage'\r\nimport MyNavbar from './components/MyNavbar'\r\nimport HomePage from './components/HomePage'\r\nimport Account from './components/Account'\r\nimport Login from './components/Login'\r\nimport Signup from './components/Signup'\r\nimport Calendar from './components/Calendar'\r\nimport Statistics from './components/Statistics'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route, Link, Redirect, withRouter\r\n} from 'react-router-dom'\r\n\r\nconst App = () => {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          <MyNavbar />\r\n          <Route exact path=\"/\" render={() => <HomePage />} />\r\n          <Route exact path=\"/add\" render={() => <AddAppPage companies={companies} setCompanies={setCompanies} user={user} setUser={setUser} />} />\r\n          <Route exact path=\"/view\" render={() => <ViewAppPage companies={companies} setCompanies={setCompanies} key={companies.id} user={user} setUser={setUser} />} />\r\n          <Route exact path=\"/calendar\" render={() => <Calendar />} />\r\n          <Route exact path=\"/statistics\" render={() => <Statistics companies={companies} setCompanies={setCompanies} user={user} setUser={setUser} />} />\r\n          <Route exact path=\"/login\" render={() => <Login user={user} setUser={setUser} />} />\r\n          <Route exact path=\"/signup\" render={() => <Signup user={user} setUser={setUser} />} />\r\n          <Route exact path=\"/account\" render={() => <Account />} />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n  \r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}